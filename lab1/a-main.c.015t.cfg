
;; Function main (main, funcdef_no=0, decl_uid=2470, cgraph_uid=1, symbol_order=0)

Removing basic block 4
Removing basic block 6
Removing basic block 14
Removing basic block 5
Merging blocks 12 and 13
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 6 4 5 3
;;
;; Loop 2
;;  header 6, latch 5
;;  depth 2, outer 1
;;  nodes: 6 5
;; 2 succs { 8 }
;; 3 succs { 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
int main ()
{
  double cpu_time_used;
  int iter;
  clock_t end_time;
  clock_t start_time;
  int n;
  int t;
  int i;
  int b;
  int a;
  double total_cpu_time_used;
  int D.2494;

  <bb 2> :
  total_cpu_time_used = 0.0;
  a = 0;
  b = 1;
  i = 1;
  scanf ("%d", &n);
  iter = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  start_time = clock ();

  <bb 4> :
  goto <bb 6>; [INV]

  <bb 5> :
  t = b;
  b = a + b;
  printf ("%d\n", b);
  a = t;
  i = i + 1;

  <bb 6> :
  n.0_1 = n;
  if (i < n.0_1)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  end_time = clock ();
  _2 = end_time - start_time;
  _3 = (double) _2;
  cpu_time_used = _3 / 1.0e+6;
  total_cpu_time_used = total_cpu_time_used + cpu_time_used;
  a = 0;
  b = 1;
  i = 1;
  iter = iter + 1;

  <bb 8> :
  if (iter <= 9999)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _4 = total_cpu_time_used / 1.0e+4;
  printf ("Average execution time over %d iterations: %lf seconds\n", 10000, _4);
  D.2494 = 0;
  n = {CLOBBER};

  <bb 10> :
<L11>:
  return D.2494;

}


